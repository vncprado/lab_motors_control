<launch>
  <!-- These are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="use_platform" default="true"/>
  <arg name="usb_port" default="/dev/ttyACM2"/>
  
  <group unless="$(arg use_platform)">
    <include file="$(find open_manipulator_gazebo)/launch/open_manipulator_gazebo.launch">
    </include>
  </group>

 <include file="$(find open_manipulator_controller)/launch/open_manipulator_controller.launch"> 
    <arg name="use_platform" value="$(arg use_platform)"/>
    <arg name="usb_port" value="$(arg usb_port)"/>
  </include>

  <include file="$(find open_manipulator_description)/launch/open_manipulator_rviz.launch" />

   <node name="OMX_teleop" pkg="OMX_teleop" type="OMX_teleop" respawn="true" output="screen"/>

<!--   <rosparam file="$(find open_manipulator_gazebo)/config/gazebo_controller.yaml" command="load" /> -->

  <!-- Load the URDF into the ROS Parameter Server -->
  <!-- <include file="$(find open_manipulator_description)/launch/open_manipulator_upload.launch"/> -->

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
<!--   <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" -->
<!--      args="-urdf -model open_manipulator -z 0.0 -J gripper_sub 0.005 -param robot_description"/> -->

  <!-- Run controller utils -->
<!--   <include file="$(find open_manipulator_gazebo)/launch/controller_utils."/> -->

  <!-- ros_control robotis manipulator launch file -->
<!--   <include file="$(find open_manipulator_gazebo)/launch/open_manipulator_controller.launch"/> -->

<!--    <rosparam file="$(find open_manipulator_gazebo)/config/arm_controller.yaml" command="load"/> -->
    <!-- send robot urdf to param server -->
<!--  <include file="$(find open_manipulator_moveit_config)/launch/planning_context.launch"> -->
<!--     <arg name="load_robot_description" value="true"/> -->
<!--   </include> -->

</launch>
